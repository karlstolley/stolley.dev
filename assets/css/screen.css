/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
/* stylelint-disable*/
a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}html{line-height:1}body{line-height:inherit}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}
/* stylelint-enable */

/* ========================================================================= */
/* Begin custom site styles below */
/* ========================================================================= */

/*
  Benton Style & Weight Reference
  (Audited 9/20/2019)
  `benton-sans`
  400: book + italic
  500: regular + italic
  700: bold + italic
  `benton-sans-condensed`
  400: book + italic
  700: bold + italic
*/

/* CSS Variables (aka Custom Properties) =================================== */

/*
  It's trendy to use :root to set global variables, but as a pseudo-
  selector, :root has the same specicifity as a class. Equally trendy on
  theme-switching examples is to use data attributes and the attribute
  selector. But I prefer the simplicity of a humble, old-school class
  selector.
*/

/*
  Default light theme, with a class for dark users who want to switch to the
  light theme.
*/
html,
.light {
  --color-background: #EEE;
  --color-foreground: #222;
  --color-shaded-background: #DDD;
  --color-shaded-foreground: #555;
  --color-shaded-border: #BBB;
  --color-accent-primary: #225599;
  --color-p-base-emphasis: #586e75;
  --color-p-base-body: #657b83;
  --color-p-base-comments: #93a1a1;
  --color-p-base-background: #fdf6e3;
  --color-p-base-background-highlight: #eee8d5;
}

/* For older browsers or light users who want to switch to the dark theme */
.dark {
  --color-background: #222;
  --color-foreground: #EEE;
  --color-p-base-emphasis: #93a1a1;
  --color-p-base-body: #839496;
  --color-p-base-comments: #586e75;
  --color-p-base-background: #002b36;
  --color-p-base-background-highlight: #073642;
}

/* Newfangled media query to deliver the dark theme to users who so prefer */
@media screen and (prefers-color-scheme: dark) {
  /*
    While this autmoatically applies the dark theme for users whose
    preferences and browser support dark mode, there is the disadvantage
    of having to duplicate the `.dark` variables above. I fully supports
    delivering as much design as possible without JavaScript, this kind
    of duplication makes a pretty strong case for leaning more heavily
    on `window.matchMedia` and handling all theme-establishing and
    -switching logic in JavaScript itself. That said, it would be
    interesting to test the performance of the media query in CSS versus
    `window.matchMedia` in JavaScript.
  */
  html {
    --color-background: #222;
    --color-foreground: #EEE;
    --color-background: #222;
    --color-foreground: #EEE;
    --color-p-base-emphasis: #93a1a1;
    --color-p-base-body: #839496;
    --color-p-base-comments: #586e75;
    --color-p-base-background: #002b36;
    --color-p-base-background-highlight: #073642;
  }
}

/* Foundational Styles ===================================================== */

html {
/*background: #EEE; */
  background: var(--color-background);
/*color: #222; */
  color: var(--color-foreground);
  /* TODO: Add fallback families */
  font-family: benton-sans, serif;
  font-size: 17px;
  font-weight: 500;
  line-height: 24px;
  text-rendering: optimizeLegibility;
}


/* Heading, Paragraph, & List Styles ======================================= */

h1,h2,h3 {
  font-size: 22.661px;
  font-weight: 700;
  line-height: 30px;
  padding-bottom: 12px;
}

p {
  padding-bottom: 12px;
}

blockquote {
/*color: #555; */
  color: var(--color-shaded-foreground);
  font-weight: 400;
  padding: 0 0 12px 0;
}
blockquote p {
/*background: #DDD; */
  background: var(--color-shaded-background);
/*border-left: 4px solid #BBB; */
  border-left: 4px solid var(--color-shaded-border);
  margin: 0 -14px;
  padding: 6px 4px 6px 10px;
}

ol:not([class]),
ul:not([class]) {
  padding-bottom: 6px;
}
ol:not([class]) li {
  list-style-type: decimal;
  padding-bottom: 6px;
}
ul:not([class]) li {
  list-style-type: disc;
  padding-bottom: 6px;
}
.latest > li,
.archive > li {
  padding-bottom: 72px;
}


/* Inline Text Styles ====================================================== */

a {
/*color: #225599; */
  color: var(--color-accent-primary);
  text-decoration: none;
}

b,strong {
  font-weight: bold;
}

cite,em,i {
  font-style: italic;
}


/* Landmark Styles ========================================================= */

#header,
#footer {
  padding: 36px 24px 12px 24px;
}
#footer {
  border: 0;
}
#content,
#about {
  padding: 24px;
}


/* Landmark Contextual Styles ============================================== */

#header h1 {
  font-weight: 500;
}

#content header {
  padding-bottom: 24px;
}

#content h1 {
  font-family: benton-sans-condensed;
  font-size: 30px;
  line-height: 36px;
  padding-bottom: 0;
}


/* Styles for Source-code Examples ========================================= */

code,
pre {
/*background: #DDD; */
  background: var(--color-p-base-background);
  color: var(--color-p-base-body);
  font-family: Menlo, Monaco, Consolas, 'Courier New', Courier, monospace;
  font-size: 0.9411764706; /* 16px */
  font-style: normal;
  font-weight: normal;
  padding: 0 0.25em 0 0.25em; /* 4px */
}
pre {
  margin: 0px -24px 12px -24px;
  padding: 12px 24px;
}
pre code {
  background: inherit;
}


/* ========================================================================= */
/* End custom site styles */
/* ========================================================================= */


/* PrismJS 1.17.1
https://prismjs.com/download.html#themes=prism-tomorrow&languages=markup+css+clike+javascript+bash+ruby+git+json */
/**
 * prism.js tomorrow night eighties for JavaScript, CoffeeScript, CSS and HTML
 * Based on https://github.com/chriskempson/tomorrow-theme
 * @author Rose Pritchard
 */

code[class*="language-"],
pre[class*="language-"] {
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;

  -moz-tab-size: 2;
  -o-tab-size: 2;
  tab-size: 2;

  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
  overflow: auto;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
}

/* Inline code */
:not(pre) > code[class*="language-"] {
  white-space: normal;
}

.token.comment,
.token.block-comment,
.token.prolog,
.token.cdata {
  color: var(--color-p-base-comments);
}
.token.bold,
.token.important,
.token.punctuation {
  color: var(--color-p-base-emphasis);
}

.token.doctype,
.token.cdata {
  color: #859900; /* green */
}
.token.tag {
  color: #d33682; /* magenta */
}
.token.attr-value,
.token.attr-value .token.punctuation + .punctuation {
  color: #268bd2; /* blue */
}
.token.attr-name,
.token.attr-value .token.punctuation {
  color: #6c71c4; /* violet */
}
.token.entity {
  color: #dc322f; /* red */
}

.colors-to-hold-onto {
  color: #cb4b16; /* orange */
  color: #6c71c4; /* violet */
  color: #2aa198; /* cyan */
  color: #268bd2; /* blue */
}

.token.important,
.token.bold {
  font-weight: bold;
}
.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}

.token.inserted,
.token.deleted {
  color: inherit;
}






/**
* A quick baseline grid overlay using css+svg.
* Inspired by [Basehold.it](https://basehold.it/).
* @author leshido
*/

.g body {
  position: relative;
}

.g body::after {
  background: url('data:image/svg+xml;utf8,<svg height="24" width="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="0.5" style="fill:rgba(255, 0, 0, 0.3)" /></svg>') repeat top left;
  content: "";
  display: block;
  pointer-events: none;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 9999;
  position: absolute;
}

.g body:active::after {
  display: none;
}
